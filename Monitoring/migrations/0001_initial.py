# Generated by Django 5.1.7 on 2025-06-06 12:59

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BachSpecDirection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('direction_name', models.CharField(max_length=200, verbose_name='Направление')),
            ],
            options={
                'verbose_name': 'Направление (Бакалавриат/Специалитет)',
                'verbose_name_plural': 'Направления (Бакалавриат/Специалитет)',
            },
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Факультет')),
            ],
            options={
                'verbose_name': 'Факультет',
                'verbose_name_plural': 'Факультеты',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField()),
                ('question_type', models.CharField(blank=True, max_length=50, null=True)),
                ('is_mandatory', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('time', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('start_datetime', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BachSpecProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(blank=True, choices=[('бакалавриат', 'Бакалавриат'), ('специалитет', 'Специалитет')], max_length=20, null=True, verbose_name='Уровень (бакалавриат/специалитет)')),
                ('profile', models.CharField(max_length=200, verbose_name='Профиль')),
                ('education_form', models.CharField(choices=[('очная', 'Очная'), ('заочная', 'Заочная'), ('очно-заочная', 'Очно-заочная')], max_length=20, verbose_name='Форма обучения')),
                ('number_of_courses', models.PositiveIntegerField(verbose_name='Количество курсов')),
                ('direction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='profiles', to='Monitoring.bachspecdirection', verbose_name='Направление')),
            ],
            options={
                'verbose_name': 'Профиль (Бакалавриат/Специалитет)',
                'verbose_name_plural': 'Профили (Бакалавриат/Специалитет)',
            },
        ),
        migrations.AddField(
            model_name='bachspecdirection',
            name='faculty',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bachspec_directions', to='Monitoring.faculty', verbose_name='Факультет'),
        ),
        migrations.CreateModel(
            name='Guest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('patronymic', models.CharField(blank=True, max_length=200, null=True)),
                ('role', models.CharField(blank=True, default='Гость', max_length=200, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='guest', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MasterDirection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('direction_name', models.CharField(max_length=200, verbose_name='Направление')),
                ('faculty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='master_directions', to='Monitoring.faculty', verbose_name='Факультет')),
            ],
            options={
                'verbose_name': 'Направление (Магистратура)',
                'verbose_name_plural': 'Направления (Магистратура)',
                'unique_together': {('faculty', 'direction_name')},
            },
        ),
        migrations.CreateModel(
            name='MasterProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile', models.CharField(max_length=200, verbose_name='Профиль')),
                ('education_form', models.CharField(choices=[('очная', 'Очная'), ('заочная', 'Заочная'), ('очно-заочная', 'Очно-заочная')], max_length=20, verbose_name='Форма обучения')),
                ('number_of_courses', models.PositiveIntegerField(verbose_name='Количество курсов')),
                ('direction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='profiles', to='Monitoring.masterdirection', verbose_name='Направление')),
            ],
            options={
                'verbose_name': 'Профиль (Магистратура)',
                'verbose_name_plural': 'Профили (Магистратура)',
            },
        ),
        migrations.CreateModel(
            name='PhdDirection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('direction_name', models.CharField(max_length=200, verbose_name='Направление')),
                ('faculty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='phd_directions', to='Monitoring.faculty', verbose_name='Факультет')),
            ],
            options={
                'verbose_name': 'Направление (Аспирантура)',
                'verbose_name_plural': 'Направления (Аспирантура)',
                'unique_together': {('faculty', 'direction_name')},
            },
        ),
        migrations.CreateModel(
            name='PhdProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile', models.CharField(max_length=200, verbose_name='Профиль')),
                ('education_form', models.CharField(choices=[('очная', 'Очная'), ('заочная', 'Заочная'), ('очно-заочная', 'Очно-заочная')], max_length=20, verbose_name='Форма обучения')),
                ('number_of_courses', models.PositiveIntegerField(verbose_name='Количество курсов')),
                ('direction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='profiles', to='Monitoring.phddirection', verbose_name='Направление')),
            ],
            options={
                'verbose_name': 'Профиль (Аспирантура)',
                'verbose_name_plural': 'Профили (Аспирантура)',
            },
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice_text', models.CharField(max_length=200)),
                ('score', models.IntegerField(blank=True, null=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choices', to='Monitoring.question')),
            ],
        ),
        migrations.CreateModel(
            name='Scale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_sign', models.CharField(max_length=200)),
                ('max_sign', models.CharField(max_length=200)),
                ('min_score', models.IntegerField(default=0)),
                ('max_score', models.IntegerField(blank=True, null=True)),
                ('type', models.CharField(choices=[('default', 'Стандартная'), ('twoside', 'Двусторонняя'), ('minus', 'Отрицательная')], default='default', max_length=200)),
                ('inverse', models.BooleanField(default=False)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scales', to='Monitoring.question')),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('patronymic', models.CharField(max_length=200)),
                ('role', models.CharField(max_length=200)),
                ('faculty', models.CharField(max_length=200)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='staff', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patronymic', models.CharField(blank=True, max_length=100, null=True, verbose_name='Отчество')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('role', models.CharField(default='Студент', max_length=50, verbose_name='Роль')),
                ('faculty', models.CharField(blank=True, max_length=200, null=True, verbose_name='Факультет')),
                ('education_level', models.CharField(blank=True, max_length=50, null=True, verbose_name='Уровень образования')),
                ('direction', models.CharField(blank=True, max_length=200, null=True, verbose_name='Направление')),
                ('profile', models.CharField(blank=True, max_length=200, null=True, verbose_name='Профиль')),
                ('study_form', models.CharField(blank=True, max_length=200, null=True, verbose_name='Форма обучения')),
                ('grade', models.CharField(blank=True, max_length=10, null=True, verbose_name='Курс')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Студент',
                'verbose_name_plural': 'Студенты',
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_score', models.IntegerField()),
                ('max_score', models.IntegerField(blank=True, null=True)),
                ('result_description', models.CharField(blank=True, max_length=500, null=True)),
                ('additional_info', models.TextField(blank=True, null=True)),
                ('condition', models.CharField(blank=True, max_length=20, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='result_images/')),
                ('use_thermometer', models.BooleanField(default=False)),
                ('color_direction', models.CharField(blank=True, choices=[('green_to_red', 'От зеленого к красному'), ('red_to_green', 'От красного к зеленому')], max_length=20, null=True)),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Monitoring.test')),
            ],
        ),
        migrations.AddField(
            model_name='question',
            name='test',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='Monitoring.test'),
        ),
        migrations.CreateModel(
            name='UserTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result', models.IntegerField(default=0)),
                ('completed_at', models.DateTimeField(auto_now_add=True)),
                ('result_description', models.CharField(blank=True, max_length=500, null=True)),
                ('additional_info', models.TextField(blank=True, null=True)),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Monitoring.test')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(default=0)),
                ('chosen_choice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Monitoring.choice')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Monitoring.question')),
                ('user_test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_answers', to='Monitoring.usertest')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='bachspecdirection',
            unique_together={('faculty', 'direction_name')},
        ),
    ]
